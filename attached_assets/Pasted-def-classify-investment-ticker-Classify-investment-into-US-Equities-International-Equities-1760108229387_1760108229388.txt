def classify_investment(ticker):
    """Classify investment into US Equities, International Equities, Core Fixed Income, or Alternatives."""
    
    # Common patterns for automatic classification
    us_equity_patterns = ['SPY', 'QQQ', 'VTI', 'VOO', 'IWM', 'DIA']
    intl_equity_patterns = ['VXUS', 'VEA', 'VWO', 'IEFA', 'IEMG', 'EFA', 'EEM']
    fixed_income_patterns = ['AGG', 'BND', 'VGIT', 'VGLT', 'TLT', 'SHY', 'IEF']
    alternatives_patterns = [
        'VNQ', 'RWR', 'IYR', 'FREL', 'SCHH', 'XLRE',  # REITs
        'GLD', 'SLV', 'DJP', 'PDBC', 'COMT', 'DBA', 'USO', 'UNG',  # Commodities
        'AMLP', 'MLPA', 'MLPX',  # MLPs
        'QAI', 'RPAR', 'TAIL'  # Hedged strategies/alternatives
    ]
    
    # Check for common patterns first
    if ticker in us_equity_patterns:
        return "US Equities"
    elif ticker in intl_equity_patterns:
        return "International Equities"
    elif ticker in fixed_income_patterns:
        return "Core Fixed Income"
    elif ticker in alternatives_patterns:
        return "Alternatives"
    
    # Try to get info from yfinance
    try:
        stock = yf.Ticker(ticker)
        info = stock.info
        
        # Check category based on yfinance data
        category = info.get('category', '').lower()
        fund_family = info.get('fundFamily', '').lower()
        asset_class = info.get('assetClass', '').lower()
        
        # US Equity indicators
        if any(keyword in category for keyword in ['large blend', 'large growth', 'large value', 'mid blend', 'mid growth', 'mid value', 'small blend', 'small growth', 'small value']):
            return "US Equities"
        elif 'equity' in category and ('us' in category or 'domestic' in category):
            return "US Equities"
        elif ticker.endswith('.TO') or ticker.endswith('.L') or ticker.endswith('.F'):
            return "International Equities"
        
        # International Equity indicators
        elif any(keyword in category for keyword in ['foreign', 'international', 'emerging', 'developed', 'europe', 'asia', 'pacific']):
            return "International Equities"
        elif 'equity' in category and any(keyword in category for keyword in ['intl', 'global', 'world']):
            return "International Equities"
        
        # Fixed Income indicators
        elif any(keyword in category for keyword in ['bond', 'fixed', 'treasury', 'corporate bond', 'government']):
            return "Core Fixed Income"
        elif 'bond' in asset_class or 'fixed' in asset_class:
            return "Core Fixed Income"
        
        # Alternatives indicators
        elif any(keyword in category for keyword in ['real estate', 'reit', 'commodity', 'commodities', 'mlp', 'master limited partnership', 'hedge', 'alternative', 'gold', 'silver', 'oil', 'natural gas']):
            return "Alternatives"
        elif 'reit' in asset_class or 'commodity' in asset_class or 'alternative' in asset_class:
            return "Alternatives"
        elif info.get('longBusinessSummary', '').lower().find('reit') != -1:
            return "Alternatives"
        elif info.get('longBusinessSummary', '').lower().find('real estate') != -1:
            return "Alternatives"
        
        # If it's a stock (not fund), classify based on exchange/country
        elif info.get('quoteType') == 'EQUITY':
            country = info.get('country', '').lower()
            if country in ['united states', 'usa', 'us']:
                return "US Equities"
            elif country and country not in ['united states', 'usa', 'us']:
                return "International Equities"
        
    except Exception as e:
        print(f"Could not fetch classification info for {ticker}: {e}")
    
    # If we can't determine automatically, return None to prompt user
    return None